<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://wallycarvalho.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://wallycarvalho.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-03-13T09:49:05+00:00</updated><id>https://wallycarvalho.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Sandwich projectiles are flying off the screen</title><link href="https://wallycarvalho.github.io/blog/2025/unity-student-prototype/" rel="alternate" type="text/html" title="Sandwich projectiles are flying off the screen"/><published>2025-03-12T08:00:00+00:00</published><updated>2025-03-12T08:00:00+00:00</updated><id>https://wallycarvalho.github.io/blog/2025/unity-student-prototype</id><content type="html" xml:base="https://wallycarvalho.github.io/blog/2025/unity-student-prototype/"><![CDATA[<div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <video src="/assets/video/prototype-sandwhich.mp4" class="img-fluid rounded z-depth-1" width="auto" height="auto" autoplay="" controls=""/> </figure> </div> </div> <div class="caption"> A demonstration of my player shooting sandwhiches off of their position showcasing what a few `transforms` can do. </div> <p>I’m currently working my way through the <code class="language-plaintext highlighter-rouge">Programming Pathways in Unity</code> and have been able to <em>quickly</em> create working prototypes, adding a little of my own flavor to each exercise and challenge.</p> <p>Thanks to my engineering career and familiarity with other languages, picking up C# has been a very pleasant experience so far. One of the highlights today (besides being able to create all these working, interactable game objects you see in the video) was learning how to use <a href="https://docs.unity3d.com/ScriptReference/Mathf.Clamp.html"><code class="language-plaintext highlighter-rouge">Mathf.Clamp</code></a> to optimize and clean up my code. It’s very useful for limiting a value between minimum and maximum boundaries without having to repeat transform statements in <code class="language-plaintext highlighter-rouge">two</code> different if statements.</p> <p>Here’s the code for that C# Player Component Script:</p> <figure class="highlight"><pre><code class="language-c#" data-lang="c#"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
</pre></td><td class="code"><pre><span class="k">using</span> <span class="nn">UnityEngine</span><span class="p">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">PlayerController</span> <span class="p">:</span> <span class="n">MonoBehaviour</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="kt">float</span> <span class="n">horizontalInput</span><span class="p">;</span>
    <span class="k">private</span> <span class="kt">float</span> <span class="n">speed</span> <span class="p">=</span> <span class="m">10.0f</span><span class="p">;</span>
    <span class="k">private</span> <span class="kt">float</span> <span class="n">xRange</span> <span class="p">=</span> <span class="m">19.0f</span><span class="p">;</span>
    <span class="k">public</span> <span class="n">GameObject</span> <span class="n">projectilePrefab</span><span class="p">;</span>
    <span class="k">private</span> <span class="kt">float</span> <span class="n">fireRate</span> <span class="p">=</span> <span class="m">0.25f</span><span class="p">;</span>
    <span class="k">private</span> <span class="kt">float</span> <span class="n">nextFire</span> <span class="p">=</span> <span class="m">0.0f</span><span class="p">;</span>
    <span class="c1">// Start is called once before the first execution of Update after the MonoBehaviour is created</span>
    <span class="k">void</span> <span class="nf">Start</span><span class="p">()</span>
    <span class="p">{</span>

    <span class="p">}</span>

    <span class="c1">// Update is called once per frame</span>
    <span class="k">void</span> <span class="nf">Update</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="n">horizontalInput</span> <span class="p">=</span> <span class="n">Input</span><span class="p">.</span><span class="nf">GetAxis</span><span class="p">(</span><span class="s">"Horizontal"</span><span class="p">);</span>
        <span class="n">transform</span><span class="p">.</span><span class="nf">Translate</span><span class="p">(</span><span class="n">Vector3</span><span class="p">.</span><span class="n">right</span> <span class="p">*</span> <span class="n">horizontalInput</span> <span class="p">*</span> <span class="n">Time</span><span class="p">.</span><span class="n">deltaTime</span> <span class="p">*</span> <span class="n">speed</span><span class="p">);</span>

        <span class="c1">// if value on X axis is beyond the minimyum or maximum</span>
        <span class="c1">// we clamp to set a stopper value that makes sure the</span>
        <span class="c1">// player does not go beyond the set value</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">transform</span><span class="p">.</span><span class="n">position</span><span class="p">.</span><span class="n">x</span> <span class="p">&lt;</span> <span class="p">-</span><span class="n">xRange</span> <span class="p">||</span> <span class="n">transform</span><span class="p">.</span><span class="n">position</span><span class="p">.</span><span class="n">x</span> <span class="p">&gt;</span> <span class="n">xRange</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="kt">float</span> <span class="n">clampedX</span> <span class="p">=</span> <span class="n">Mathf</span><span class="p">.</span><span class="nf">Clamp</span><span class="p">(</span><span class="n">transform</span><span class="p">.</span><span class="n">position</span><span class="p">.</span><span class="n">x</span><span class="p">,</span> <span class="p">-</span><span class="n">xRange</span><span class="p">,</span> <span class="n">xRange</span><span class="p">);</span>
            <span class="n">transform</span><span class="p">.</span><span class="n">position</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Vector3</span><span class="p">(</span><span class="n">clampedX</span><span class="p">,</span> <span class="n">transform</span><span class="p">.</span><span class="n">position</span><span class="p">.</span><span class="n">y</span><span class="p">,</span> <span class="n">transform</span><span class="p">.</span><span class="n">position</span><span class="p">.</span><span class="n">z</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="c1">// if the player presses space, we instantiate a new projectile</span>
        <span class="c1">// at the player's position and rotation so it moves forward</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">Input</span><span class="p">.</span><span class="nf">GetKey</span><span class="p">(</span><span class="n">KeyCode</span><span class="p">.</span><span class="n">Space</span><span class="p">)</span> <span class="p">&amp;&amp;</span> <span class="n">Time</span><span class="p">.</span><span class="n">time</span> <span class="p">&gt;</span> <span class="n">nextFire</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="nf">Instantiate</span><span class="p">(</span><span class="n">projectilePrefab</span><span class="p">,</span> <span class="n">transform</span><span class="p">.</span><span class="n">position</span><span class="p">,</span> <span class="n">projectilePrefab</span><span class="p">.</span><span class="n">transform</span><span class="p">.</span><span class="n">rotation</span><span class="p">);</span>
            <span class="n">nextFire</span> <span class="p">=</span> <span class="n">Time</span><span class="p">.</span><span class="n">time</span> <span class="p">+</span> <span class="n">fireRate</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure> <p>I thought of two additional features that I wanted to implement as nice-to-haves to this prototype:</p> <blockquote> <ol> <li>I wanted to shoot multiple projectiles if the player keeps the key pressed down</li> <li>I wanted to implement a fire rate process to avoid shooting projectiles on top of each other, allowing the player to tell when each projectile is being shot (similar concept to throttling api requests)</li> </ol> </blockquote> <p>Once implemented, each sandwich moves through the space as expected, and the player can easily tell when their projectiles are being fired. This results in a much improved user experience.</p> <p>o7</p>]]></content><author><name></name></author><category term="journal"/><category term="career"/><category term="devlog"/><category term="videos"/><summary type="html"><![CDATA[Controlling the player and shooting projectiles]]></summary></entry><entry><title type="html">Transitioning to Gaming from General Software Development - Part 1</title><link href="https://wallycarvalho.github.io/blog/2025/transitioning-to-gaming/" rel="alternate" type="text/html" title="Transitioning to Gaming from General Software Development - Part 1"/><published>2025-03-11T08:00:00+00:00</published><updated>2025-03-11T08:00:00+00:00</updated><id>https://wallycarvalho.github.io/blog/2025/transitioning-to-gaming</id><content type="html" xml:base="https://wallycarvalho.github.io/blog/2025/transitioning-to-gaming/"><![CDATA[<h2 id="intro">Intro</h2> <p>I should preface this by saying that I’ve always loved working with software, ever since I started my career around 16 or 17 years old. A lot has changed since then, and I’d like to shed some light on where I’m at today.</p> <p>I began my career not knowing much about software development, as I imagine most aspiring developers do. I knew I liked STEM in high school and really enjoyed solving equations, but I had no idea what I wanted to do in college. In fact, I was ready to follow my friends into law school.</p> <p>My parents noticed my aptitude for computers and pushed me in that direction, for which I’m forever thankful. Their guidance was vital, and still is. As I get older, it only confirms the following:</p> <blockquote> <p>Wisdom isn’t necessarily tied to intelligence, but rather to experience, introspection, maturity, and self-awareness.</p> </blockquote> <p>Nonetheless, since then, I’ve worked at a variety of companies, ranging from consulting to both public and private organizations. I’ve developed solutions for databases, built portals, reports, and dashboards, and even presented insightful business intelligence KPIs and data to clients, almost like a sales engineer, while supporting sales teams. For the longest time, I felt right at home, and it was very rewarding. I managed to pay off my college debt, buy a car, help my parents with other things, and a lot more.</p> <p>Over the years, something started to feel off. It was always the same problem and the same solution. I admit, up until recently, I hadn’t explored opportunities with companies doing something more interesting or more aligned with my personal value. For example, working for a company that creates solutions for climate change aligns with my values, which I now consider a must when applying for a job. Or at least, it used to, until I decided to follow another dream in the gaming industry.</p> <h2 id="what-do-i-know-about-the-industry">What do I know about the Industry</h2> <p>I read and consume a lot of news about the gaming industry. Every single day, I read articles, watch news videos, and follow streams and influencers to learn more about upcoming games and what’s happening in the industry. I’m very aware of the culture in some companies that focus on profit over creating memorable experiences for their audience. I know there’s a lot of crunch time, and post-production takes a toll on the devs. Deadlines get pushed back (or forward), and the devs end up working extra hours to finalize their products. Still, now my goal is to become one of them.</p> <p>Having this baggage is actually useful. I possess a lot of project management and technical knowledge, I’ve worked with different programming languages, which makes my learning process a lot easier now, and I have a lot of experience dealing with clients, deadlines, managing scope, and general development theory and ideas. Still, I’m a newbie. I’m learning about game development and design, a new language (C#—which is familiar in many ways and takes me back to C++ during college), new concepts, and new tools. It’s been a lot of fun.</p> <h2 id="whats-next">What’s next</h2> <p>As I continue my learning journey, I plan to create small, simple games to demonstrate my skills with the engine and, at the very least, publish a project on Steam. As part of this process, I hope to create the GDD, implement project management best practices I’ve accumulated over the years, document everything I can, create assets, and more. The goal is to design and create a game from scratch—start to finish—applying the concepts I’m currently learning in a consistent and professional manner, hoping to mimic current industry practices.</p> <p>Lastly, take a peek at the sketch for one of the projects I’m planning to deliver soon as part of my Unity 3D journey. The name of this game is <strong>Kitchen Escape</strong>.</p> <swiper-container keyboard="true" navigation="true" pagination="true" pagination-clickable="true" pagination-dynamic-bullets="true" rewind="true"> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/kitchen-escape1-480.webp 480w,/assets/img/kitchen-escape1-800.webp 800w,/assets/img/kitchen-escape1-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/kitchen-escape1.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/kitchen-escape2-480.webp 480w,/assets/img/kitchen-escape2-800.webp 800w,/assets/img/kitchen-escape2-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/kitchen-escape2.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> </swiper-container>]]></content><author><name></name></author><category term="journal"/><category term="career"/><category term="gamedev"/><summary type="html"><![CDATA[The beginning of a new journey]]></summary></entry></feed>